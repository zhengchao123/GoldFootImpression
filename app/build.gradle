apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.target_version
    defaultConfig {
        applicationId rootProject.ext.applicationReleaseId
        minSdkVersion rootProject.ext.min_version
        targetSdkVersion rootProject.ext.target_version
        versionCode rootProject.ext.version_code
        versionName rootProject.ext.version_name
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86_64","x86"
        }
        manifestPlaceholders = [
                GETUI_APP_ID : "EAwiEIncNu9eE8IJAr5HU",
                GETUI_APP_KEY : "nyMZDWRC2I7ZT2DptJf3I1",
                GETUI_APP_SECRET : "HEDtQGRAH76uscMLIOStBA"
        ]
    }

    buildTypes {
        release {
            buildConfigField("boolean", "RELEASE", "true")
            buildConfigField("String", "URL", "\"http://120.79.29.181:9000/pc_verify/\"")
            buildConfigField("String", "URL_NO_VERIFY", "\"http://120.79.29.181:9000/pc/\"")
            //是否移除无用资源
            shrinkResources true
            //是否混淆
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue("string", "productName", "金足印象")
        }
        debug {
            buildConfigField("boolean", "RELEASE", "false")
            buildConfigField("String", "URL", "\"http://120.79.29.181:9000/pc_verify/\"")
            buildConfigField("String", "URL_NO_VERIFY", "\"http://120.79.29.181:9000/pc/\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue("string", "productName", "金足印象debug")
        }
    }

    productFlavors {
        formal {
            flavorDimensions "default"
            applicationId rootProject.ext.applicationReleaseId
            resValue("string", "productName", "金足印象")
        }
        fortest {
            flavorDimensions "default"
            applicationId rootProject.ext.applicationTestId
            resValue("string", "productName", "金足印象测试版")
        }
    }


    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/resources']
            aidl.srcDirs = ['src/main/aidl']
            renderscript.srcDirs = ['src/maom']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
            jniLibs.srcDir 'src/main/jniLibs'
        }
        formal {
            java.srcDirs = ['src/formal/java']
            res.srcDirs = ['src/formal/res']
        }
        test {
            res.srcDirs = ['src/fortest/res']
            java.srcDirs = ['src/fortest/java']
        }

    }


    applicationVariants.all { variant ->
        variant.outputs.all { output -> // each 改为 all
            def calender = Calendar.getInstance()
            calender.setTimeInMillis(System.currentTimeMillis())
            def fileName = calender.get(Calendar.YEAR) + "-" + (calender.get(Calendar.MONTH) + 1) + "-" + calender.get(Calendar.DAY_OF_MONTH) + "-" + calender.get(Calendar.HOUR_OF_DAY) + "-" + calender.get(Calendar.MINUTE) + "_" + "${variant.buildType.name}_${variant.productFlavors[0].name}_${variant.versionName}.apk"
            outputFileName = fileName // output.outputFile 改为 outputFileName
        }
    }

    dataBinding {
        enabled true
    }

    lintOptions {
        disable 'GoogleAppIndexingWarning'
        baseline file("lint-baseline.xml")
    }

    signingConfigs {
        release {
            //发布版本的签名配置
            storeFile file(System.properties['keyStore'])
            //签名密码
            storePassword project.property('ray.keyPassword')
            keyAlias mKeyAlias
            keyPassword project.property('ray.keyPassword')
        }
        debug {
            //调试版本的签名配置/
            storeFile file(System.properties['keyStore'])
            storePassword project.property('ray.keyPassword')
            keyAlias mKeyAlias
            keyPassword project.property('ray.keyPassword')
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-vector-drawable:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'androidx.recyclerview:recyclerview:1.0.0-alpha1'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.qmuiteam:qmui:1.1.3'
    implementation 'com.getui:sdk:2.13.1.0'

}